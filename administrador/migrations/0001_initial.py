# Generated by Django 4.2 on 2023-05-02 03:45

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.IntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamenesBreakdown',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('answer', models.CharField(max_length=5)),
                ('correct', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'examenes_breakdown',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamenesExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('career', models.CharField(choices=[('DNAM', 'DNAM'), ('DNAM/LINEA', 'DNAM/LINEA'), ('PIAA', 'PIAA'), ('PIAA/SAB', 'PIAA/SABADOS'), ('PIAM', 'PIAM'), ('MAAU', 'MAAU'), ('DMIAP', 'DMIAP'), ('MAI', 'MAI'), ('MAI-DES', 'MAI-DES'), ('PIAP', 'PIAP'), ('AACH/LINEA', 'AACH/LINEA'), ('TIADSM', 'TIADSM'), ('TIAIRD', 'TIAIRD'), ('TIAVND', 'TIAVND'), ('MAR', 'MAR')], max_length=10)),
                ('status_mod_1', models.BooleanField(default=True)),
                ('status_mod_2', models.BooleanField(default=True)),
                ('status_mod_3', models.BooleanField(default=True)),
                ('status_mod_4', models.BooleanField(default=True)),
                ('result_mod_1', models.FloatField(default=0.0)),
                ('result_mod_2', models.FloatField(default=0.0)),
                ('result_mod_3', models.FloatField(default=0.0)),
                ('result_mod_4', models.FloatField(default=0.0)),
                ('average', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'examenes_exam',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExamenesStage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('no_stage', models.BigIntegerField()),
                ('application_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'examenes_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreguntasModule',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'preguntas_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PreguntasQuestion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(blank=True, null=True)),
                ('question_url', models.CharField(blank=True, max_length=200, null=True)),
                ('resp1', models.CharField(max_length=250)),
                ('resp2', models.CharField(max_length=250)),
                ('resp3', models.CharField(blank=True, max_length=250, null=True)),
                ('resp4', models.CharField(blank=True, max_length=250, null=True)),
                ('correct', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'preguntas_question',
                'managed': False,
            },
        ),
    ]
